
&НаСервере
Функция ПолучитьСтатусПустой()
	
	ЕСли СокрЛП(ЭтаФорма.Объект.ПользовПодразделение.Родитель) = "Заправляющая организация" Тогда
		Возврат Перечисления.СтатусыКартриджей.Полный
	Иначе	
		Возврат Перечисления.СтатусыКартриджей.Пустой;
	КонецЕсли;
	
КонецФункции //ПолучитьСтатусПустой

&НаСервере
Функция ПолучитьСтатусПолный()
	
	ЕСли СокрЛП(ЭтаФорма.Объект.ПользовПодразделение.Родитель) = "Заправляющая организация" Тогда
		Возврат Перечисления.СтатусыКартриджей.Пустой;
	Иначе	
		Возврат Перечисления.СтатусыКартриджей.Полный
	КонецЕсли;
	
КонецФункции //ПолучитьСтатусПолный

&НаСервереБезКонтекста
Функция ПолучитьИнвНомерКартриджа(Картридж)
	
	Возврат Картридж.ИнвентаризационныйНомер;
	
КонецФункции // ПолучитьИнвНомерКартриджа()

&НаСервереБезКонтекста
Функция ПолучитОсновноеПодразделение()
	
	Возврат ПараметрыСеанса.ТекущийПользователь.ОсновноеПодразделение;
	
КонецФункции // ПолучитОсновноеПодразделение()

&НаСервере
Функция ПроверкаПередЗаписью(Отказ)
	
	Если ЭтаФорма.Объект.ПользовПодразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		Сообщить("Не выбранно Пользовательское подразделение!");
		Возврат Истина;					
	КонецЕсли;
	
	Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если Объект.ОснПодразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		
		Отказ = Истина;
		Сообщить("Заполните подразделение с которого будут списаны картриджи!");
		
	ИначеЕсли Объект.ПользовПодразделение = Справочники.Подразделения.ПустаяСсылка() Тогда
		
		Отказ = Истина;
		Сообщить("Заполните подразделение на которое будут перемещены картриджи!");
		
	КонецЕсли;
		
КонецФункции // ПроверкаПредЗаписью()

&НаСервере
Функция  ПолучитьКоличествоДнейМеждуПриемкойИОтправкой(Период,Ссылка,Картридж)
	
	КоличествоДней = 0; 
	
	Возврат КоличествоДней;
	
КонецФункции // ПолучитьКоличествоДнейМеждуПриемкойИОтправкой()

&НаКлиенте
Процедура ПриемКартриджПриИзменении(Элемент)
		
	Стр = ТекущийЭлемент.ТекущиеДанные;
	Стр.ИнвНомер = ПолучитьИнвНомерКартриджа(Стр.Картридж);
	Стр.Статус   = ПолучитьСтатусПустой();
	
КонецПроцедуры //ПриемКартриджПриИзменении

&НаКлиенте
Процедура ПередачаКартриджПриИзменении(Элемент)
	
	
	Стр = ТекущийЭлемент.ТекущиеДанные;
	Стр.ИнвНомер = ПолучитьИнвНомерКартриджа(Стр.Картридж);
	Стр.Статус   = ПолучитьСтатусПолный();	
	
КонецПроцедуры //ПередачаКартриджПриИзменении

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Если Объект.Дата = НачалоДня(ТекущаяДата()) ТОгда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ПроверкаПередЗаписью(Отказ);
	ПроверкаНаОдинаковыеСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	СтруктураПараметры = Новый Структура;
	
	СтруктураПараметры.Вставить("ИмяДокумента"        ,"ПриемПередачаКартриджей");
	СтруктураПараметры.Вставить("ПользовПодразделение",Объект.ПользовПодразделение);
	СтруктураПараметры.Вставить("ОснПодразделение"    ,Объект.ОснПодразделение);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаПодбора", СтруктураПараметры, ЭтаФорма);
	Форма.Открыть();		
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ОснПодразделение = Справочники.Подразделения.ПустаяСсылка() тогда
		Объект.ОснПодразделение = ПолучитОсновноеПодразделение();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаНаОдинаковыеСтроки()
	
	ТЗ_Картриджи = Объект.Передача.Выгрузить();
	
	ТЗ_Картриджи.Свернуть("Картридж", "Количество");
	
	Объект.Передача.Очистить();
	Объект.Передача.Загрузить(ТЗ_Картриджи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбновитьИнтерфейс();
КонецПроцедуры
